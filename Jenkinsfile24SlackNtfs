def sendSlackNotifications(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESSFUL'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESSFUL') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)
}


node{


	   //def mavenHome = tool(/var/lib/jenkins/tools/hudson.tasks.Maven_MavenInstallation/Maven3.9.6/) 
	  //==>is going to give path here only but mvn command available in the /bin/ directory
	  	
	  def mavenHome = tool name:"Maven3.9.6"

	  buildName 'Mahi - ${BUILD_NUMBER}'
	  buildDescription 'Pipele Script written by MS'
	
	  echo "The node name is: ${env.NODE_NAME}"

	  echo "The Job name is: ${env.JOB_NAME}"

	  echo "The Build Number is: ${env.BUILD_NUMBER}"

properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')), [$class: 'JobLocalConfiguration', changeReasonComment: '']])
//properties([[$class: 'JobLocalConfiguration', changeReasonComment: ''], pipelineTriggers([pollSCM('* * * * *')])])
//properties([[$class: 'JobLocalConfiguration', changeReasonComment: ''], pipelineTriggers([cron('* * * * *')])])	
	 //Getting the code or Chechout stage	

	


try {


	 stage('CheckoutCode'){
	 	// By default it is going to take the code from master branch. other than master branch we need to specify the branc name
		
		git branch: 'development', credentialsId: '6cfaa081-e697-448a-8bd0-22101123e699', url: 
		'https://github.com/Mahesh-Kethapaga/maven-web-application.git'

	}
	
	//Build stage	
	 stage('Build'){
	 
		//mvn clean package => directly we are not going to execute these commands becz it's linux server so use "sh"
		
		sh "$mavenHome/bin/mvn clean package" // For Linux and Mac
		
		//bat "mvn clean package" // For Windows		
		
	}
	
	
} //Try Block Closing

catch (Exception e) {

	currentBuild.result = "FAILURE"

	 throw e
}
finally {

	sendSlackNotifications(currentBuild.result)	
}




}//Node Closing
